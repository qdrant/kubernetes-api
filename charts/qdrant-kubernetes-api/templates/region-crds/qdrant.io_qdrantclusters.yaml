{{ if .Values.includeRegionCRDs }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: qdrantclusters.qdrant.io
spec:
  group: qdrant.io
  names:
    kind: QdrantCluster
    listKind: QdrantClusterList
    plural: qdrantclusters
    shortNames:
    - qc
    - qcs
    singular: qdrantcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.size
      name: Nodes
      type: integer
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: QdrantCluster is the Schema for the qdrantclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: QdrantClusterSpec defines the desired state of QdrantCluster
            properties:
              clusterManager:
                description: |-
                  ClusterManager specifies whether to use the cluster manager for this cluster.
                  The Python-operator will deploy a dedicated cluster manager instance.
                  The Go-operator will use a shared instance.
                  If not set, the default will be taken from the operator config.
                type: boolean
              config:
                description: Config specifies the Qdrant configuration setttings for
                  the clusters.
                properties:
                  collection:
                    description: Collection specifies the default collection configuration
                      for Qdrant.
                    properties:
                      replication_factor:
                        description: ReplicationFactor specifies the default number
                          of replicas of each shard
                        format: int64
                        type: integer
                      strict_mode:
                        description: StrictMode specifies the strict mode configuration
                          for the collection
                        properties:
                          max_payload_index_count:
                            description: |-
                              MaxPayloadIndexCount represents the maximal number of payload indexes allowed to be created.
                              It can be set for Qdrant version >= 1.16.0
                              Default to 100 if omitted and Qdrant version >= 1.16.0
                            minimum: 1
                            type: integer
                        type: object
                      vectors:
                        description: Vectors specifies the default parameters for
                          vectors
                        properties:
                          on_disk:
                            description: OnDisk specifies whether vectors should be
                              stored in memory or on disk.
                            type: boolean
                        type: object
                      write_consistency_factor:
                        description: WriteConsistencyFactor specifies how many replicas
                          should apply the operation to consider it successful
                        format: int64
                        type: integer
                    type: object
                  inference:
                    description: Inference configuration. This is used in Qdrant Managed
                      Cloud only. If not set Inference is not available to this cluster.
                    properties:
                      enabled:
                        default: false
                        description: Enabled specifies whether to enable inference
                          for the cluster or not.
                        type: boolean
                    type: object
                  log_level:
                    description: LogLevel specifies the log level for Qdrant.
                    type: string
                  service:
                    description: Service specifies the service level configuration
                      for Qdrant.
                    properties:
                      api_key:
                        description: ApiKey for the qdrant instance
                        properties:
                          secretKeyRef:
                            description: SecretKeyRef to the secret containing data
                              to configure the qdrant instance
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      enable_tls:
                        description: |-
                          EnableTLS specifies whether to enable tls for the qdrant instance
                          Default is false
                        type: boolean
                      hide_jwt_dashboard:
                        description: |-
                          HideJwtDashboard specifies whether to hide the JWT dashboard of the embedded UI
                          Default is false
                        type: boolean
                      jwt_rbac:
                        description: |-
                          JwtRbac specifies whether to enable jwt rbac for the qdrant instance
                          Default is false
                        type: boolean
                      max_request_size_mb:
                        description: |-
                          MaxRequestSizeMb specifies them maximum size of POST data in a single request in megabytes
                          Default, if not set is 32 (MB)
                        format: int64
                        type: integer
                      read_only_api_key:
                        description: ReadOnlyApiKey for the qdrant instance
                        properties:
                          secretKeyRef:
                            description: SecretKeyRef to the secret containing data
                              to configure the qdrant instance
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    type: object
                  storage:
                    description: Storage specifies the storage configuration for Qdrant.
                    properties:
                      maxCollections:
                        description: |-
                          MaxCollections represents the maximal number of collections allowed to be created.
                          It can be set for Qdrant version >= 1.14.1
                          Default to 1000 if omitted and Qdrant version >= 1.15.0
                        minimum: 1
                        type: integer
                      performance:
                        description: Performance configuration
                        properties:
                          async_scorer:
                            description: AsyncScorer enables io_uring when rescoring
                            type: boolean
                          optimizer_cpu_budget:
                            description: |-
                              OptimizerCPUBudget defines the number of CPU allocation.
                              If 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size
                              If negative - subtract this number of CPUs from the available CPUs.
                              If positive - use this exact number of CPUs.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  tls:
                    description: TLS specifies the TLS configuration for Qdrant.
                    properties:
                      caCert:
                        description: Reference to the secret containing the CA certificate
                          file
                        properties:
                          secretKeyRef:
                            description: SecretKeyRef to the secret containing data
                              to configure the qdrant instance
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      cert:
                        description: Reference to the secret containing the server
                          certificate chain file
                        properties:
                          secretKeyRef:
                            description: SecretKeyRef to the secret containing data
                              to configure the qdrant instance
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      key:
                        description: Reference to the secret containing the server
                          private key file
                        properties:
                          secretKeyRef:
                            description: SecretKeyRef to the secret containing data
                              to configure the qdrant instance
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    type: object
                type: object
              gpu:
                description: GPU specifies GPU configuration for the cluster. If this
                  field is not set, no GPU will be used.
                properties:
                  allowIntegrated:
                    default: false
                    description: AllowIntegrated specifies whether to allow integrated
                      GPUs to be used.
                    type: boolean
                  deviceFilter:
                    description: |-
                      DeviceFilter for GPU devices by hardware name. Case-insensitive.
                      List of substrings to match against the gpu device name.
                      Example: [- "nvidia"]
                      If not specified, all devices are accepted.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  devices:
                    description: |-
                      Devices is a List of explicit GPU devices to use.
                      If host has multiple GPUs, this option allows to select specific devices
                      by their index in the list of found devices.
                      If `deviceFilter` is set, indexes are applied after filtering.
                      If not specified, all devices are accepted.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  forceHalfPrecision:
                    default: false
                    description: |-
                      ForceHalfPrecision for `f32` values while indexing.
                      `f16` conversion will take place
                      only inside GPU memory and won't affect storage type.
                    type: boolean
                  gpuType:
                    allOf:
                    - enum:
                      - nvidia
                      - amd
                    - enum:
                      - nvidia
                      - amd
                    description: GPUType specifies the type of the GPU to use. If
                      set, GPU indexing is enabled.
                    type: string
                  groupsCount:
                    description: |-
                      GroupsCount is the amount of used vulkan "groups" of GPU.
                      In other words, how many parallel points can be indexed by GPU.
                      Optimal value might depend on the GPU model.
                      Proportional, but doesn't necessary equal to the physical number of warps.
                      Do not change this value unless you know what you are doing.
                    minimum: 1
                    type: integer
                  parallelIndexes:
                    default: 1
                    description: ParallelIndexes is the number of parallel indexes
                      to run on the GPU.
                    minimum: 1
                    type: integer
                required:
                - allowIntegrated
                - forceHalfPrecision
                - gpuType
                - parallelIndexes
                type: object
              id:
                description: Id specifies the unique identifier of the cluster
                type: string
              image:
                description: Image specifies the image to use for each Qdrant node.
                properties:
                  pullPolicy:
                    description: |-
                      PullPolicy specifies the image pull policy for the Qdrant image.
                      If not specified defaults the config of the operator (or IfNotPresent if not specified in operator).
                    type: string
                  pullSecretName:
                    description: PullSecretName specifies the pull secret for the
                      Qdrant image.
                    type: string
                  repository:
                    description: |-
                      Repository specifies the repository of the Qdrant image.
                      If not specified defaults the config of the operator (or qdrant/qdrant if not specified in operator).
                    type: string
                type: object
              ingress:
                description: Ingress specifies the ingress for the cluster.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations specifies annotations for the ingress.
                    type: object
                  enabled:
                    description: Enabled specifies whether to enable ingress for the
                      cluster or not.
                    type: boolean
                  host:
                    description: Host specifies the host for the ingress.
                    type: string
                  ingressClassName:
                    description: IngressClassName specifies the name of the ingress
                      class
                    type: string
                  nginx:
                    description: NGINX specifies the nginx ingress specific configurations.
                    properties:
                      allowedSourceRanges:
                        description: AllowedSourceRanges specifies the allowed CIDR
                          source ranges for the ingress.
                        items:
                          type: string
                        type: array
                      grpcHost:
                        description: GRPCHost specifies the host name for the GRPC
                          ingress.
                        type: string
                    type: object
                  tls:
                    description: |-
                      TLS specifies whether to enable tls for the ingress.
                      The default depends on the ingress provider:
                      - KubernetesIngress: False
                      - NginxIngress: False
                      - QdrantCloudTraefik: Depending on the config.tls setting of the operator.
                    type: boolean
                  tlsSecretName:
                    description: TLSSecretName specifies the name of the secret containing
                      the tls certificate.
                    type: string
                  traefik:
                    description: Traefik specifies the traefik ingress specific configurations.
                    properties:
                      allowedSourceRanges:
                        description: AllowedSourceRanges specifies the allowed CIDR
                          source ranges for the ingress.
                        items:
                          type: string
                        type: array
                      entryPoints:
                        description: |-
                          EntryPoints is the list of traefik entry points to use for the ingress route.
                          If nothing is set, it will take the entryPoints configured in the operator config.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector specifies the node selector for each Qdrant
                  node.
                type: object
              pauses:
                description: |-
                  Pauses specifies a list of pause request by developer for manual maintenance.
                  Operator will skip handling any changes in the CR if any pause request is present.
                items:
                  properties:
                    creationTimestamp:
                      description: CreationTimestamp specifies the time when the pause
                        request was created.
                      type: string
                    owner:
                      description: Owner specifies the owner of the pause request.
                      type: string
                    reason:
                      description: Reason specifies the reason for the pause request.
                      type: string
                  type: object
                type: array
              podDisruptionBudget:
                description: PodDisruptionBudget specifies the pod disruption budget
                  for the cluster.
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at most "maxUnavailable" pods selected by
                      "selector" are unavailable after the eviction, i.e. even in absence of
                      the evicted pod. For example, one can prevent all voluntary evictions
                      by specifying 0. This is a mutually exclusive setting with "minAvailable".
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at least "minAvailable" pods selected by
                      "selector" will still be available after the eviction, i.e. even in the
                      absence of the evicted pod.  So for example you can prevent all voluntary
                      evictions by specifying "100%".
                    x-kubernetes-int-or-string: true
                  selector:
                    description: |-
                      Label query over pods whose evictions are managed by the disruption
                      budget.
                      A null selector will match no pods, while an empty ({}) selector will select
                      all pods within the namespace.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  unhealthyPodEvictionPolicy:
                    description: |-
                      UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods
                      should be considered for eviction. Current implementation considers healthy pods,
                      as pods that have status.conditions item with type="Ready",status="True".

                      Valid policies are IfHealthyBudget and AlwaysAllow.
                      If no policy is specified, the default behavior will be used,
                      which corresponds to the IfHealthyBudget policy.

                      IfHealthyBudget policy means that running pods (status.phase="Running"),
                      but not yet healthy can be evicted only if the guarded application is not
                      disrupted (status.currentHealthy is at least equal to status.desiredHealthy).
                      Healthy pods will be subject to the PDB for eviction.

                      AlwaysAllow policy means that all running pods (status.phase="Running"),
                      but not yet healthy are considered disrupted and can be evicted regardless
                      of whether the criteria in a PDB is met. This means perspective running
                      pods of a disrupted application might not get a chance to become healthy.
                      Healthy pods will be subject to the PDB for eviction.

                      Additional policies may be added in the future.
                      Clients making eviction decisions should disallow eviction of unhealthy pods
                      if they encounter an unrecognized policy in this field.
                    type: string
                type: object
              rebalanceStrategy:
                description: |-
                  RebalanceStrategy specifies the strategy to use for automaticially rebalancing shards the cluster.
                  Cluster-manager needs to be enabled for this feature to work.
                enum:
                - by_count
                - by_size
                - by_count_and_size
                type: string
              resources:
                description: Resources specifies the resources to allocate for each
                  Qdrant node.
                properties:
                  cpu:
                    description: CPU specifies the CPU limit for each Qdrant node.
                    type: string
                  memory:
                    description: Memory specifies the memory limit for each Qdrant
                      node.
                    type: string
                  requests:
                    description: Requests specifies the resource requests for each
                      Qdrant node.
                    properties:
                      cpu:
                        description: CPU specifies the CPU request for each Qdrant
                          node.
                        type: string
                      memory:
                        description: Memory specifies the memory request for each
                          Qdrant node.
                        type: string
                    type: object
                  storage:
                    description: Storage specifies the storage amount for each Qdrant
                      node.
                    type: string
                type: object
              restartAllPodsConcurrently:
                description: |-
                  RestartAllPodsConcurrently specifies whether to restart all pods concurrently (also called one-shot-restart).
                  If enabled, all the pods in the cluster will be restarted concurrently in situations where multiple pods
                  need to be restarted, like when RestartedAtAnnotationKey is added/updated or the Qdrant version needs to be upgraded.
                  This helps sharded but not replicated clusters to reduce downtime to a possible minimum during restart.
                  If unset, the operator is going to restart nodes concurrently if none of the collections if replicated.
                type: boolean
              security:
                description: Security specifies the security context for each Qdrant
                  node.
                properties:
                  fsGroup:
                    description: FsGroup specifies file system group to run the Qdrant
                      process as.
                    format: int64
                    type: integer
                  group:
                    description: Group specifies the group to run the Qdrant process
                      as.
                    format: int64
                    type: integer
                  user:
                    description: User specifies the user to run the Qdrant process
                      as.
                    format: int64
                    type: integer
                type: object
              service:
                description: Service specifies the configuration of the Qdrant Kubernetes
                  Service.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations specifies the annotations for the Service.
                    type: object
                  type:
                    default: ClusterIP
                    description: 'Type specifies the type of the Service: "ClusterIP",
                      "NodePort", "LoadBalancer".'
                    type: string
                type: object
              servicePerNode:
                default: true
                description: ServicePerNode specifies whether the cluster should start
                  a dedicated service for each node.
                type: boolean
              size:
                description: Size specifies the desired number of Qdrant nodes in
                  the cluster
                maximum: 100
                minimum: 1
                type: integer
              startupDelaySeconds:
                description: |-
                  If StartupDelaySeconds is set (> 0), an additional 'sleep <value>' will be emitted to the pod startup.
                  The sleep will be added when a pod is restarted, it will not force any pod to restart.
                  This feature can be used for debugging the core, e.g. if a pod is in crash loop, it provided a way
                  to inspect the attached storage.
                type: integer
              statefulSet:
                description: StatefulSet specifies the configuration of the Qdrant
                  Kubernetes StatefulSet.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations specifies the annotations for the StatefulSet.
                    type: object
                  pods:
                    description: Pods  specifies the configuration of the Pods of
                      the Qdrant StatefulSet.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies the annotations for the
                          Pods.
                        type: object
                      extraEnv:
                        description: ExtraEnv specifies the extra environment variables
                          for the Pods.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies the labels for the Pods.
                        type: object
                    type: object
                type: object
              storageClassNames:
                description: StorageClassNames specifies the storage class names for
                  db and snapshots.
                properties:
                  db:
                    description: DB specifies the storage class name for db volume.
                    type: string
                  snapshots:
                    description: Snapshots specifies the storage class name for snapshots
                      volume.
                    type: string
                type: object
              suspend:
                default: false
                description: |-
                  Suspend specifies whether to suspend the cluster.
                  If enabled, the cluster will be suspended and all related resources will be removed except the PVCs.
                type: boolean
              tolerations:
                description: Tolerations specifies the tolerations for each Qdrant
                  node.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: TopologySpreadConstraints specifies the topology spread
                  constraints for the cluster.
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  properties:
                    labelSelector:
                      description: |-
                        LabelSelector is used to find matching pods.
                        Pods that match this label selector are counted to determine the number of pods
                        in their corresponding topology domain.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    matchLabelKeys:
                      description: |-
                        MatchLabelKeys is a set of pod label keys to select the pods over which
                        spreading will be calculated. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are ANDed with labelSelector
                        to select the group of existing pods over which spreading will be calculated
                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                        Keys that don't exist in the incoming pod labels will
                        be ignored. A null or empty list means only match against labelSelector.

                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    maxSkew:
                      description: |-
                        MaxSkew describes the degree to which pods may be unevenly distributed.
                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                        between the number of matching pods in the target topology and the global minimum.
                        The global minimum is the minimum number of matching pods in an eligible domain
                        or zero if the number of eligible domains is less than MinDomains.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 2/2/1:
                        In this case, the global minimum is 1.
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |   P   |
                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                        violate MaxSkew(1).
                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                        to topologies that satisfy it.
                        It's a required field. Default value is 1 and 0 is not allowed.
                      format: int32
                      type: integer
                    minDomains:
                      description: |-
                        MinDomains indicates a minimum number of eligible domains.
                        When the number of eligible domains with matching topology keys is less than minDomains,
                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                        this value has no effect on scheduling.
                        As a result, when the number of eligible domains is less than minDomains,
                        scheduler won't schedule more than maxSkew Pods to those domains.
                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                        Valid values are integers greater than 0.
                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                        labelSelector spread as 2/2/2:
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |  P P  |
                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                        In this situation, new pod with the same labelSelector cannot be scheduled,
                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                        it will violate MaxSkew.
                      format: int32
                      type: integer
                    nodeAffinityPolicy:
                      description: |-
                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                        when calculating pod topology spread skew. Options are:
                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                        If this value is nil, the behavior is equivalent to the Honor policy.
                      type: string
                    nodeTaintsPolicy:
                      description: |-
                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                        pod topology spread skew. Options are:
                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                        has a toleration, are included.
                        - Ignore: node taints are ignored. All nodes are included.

                        If this value is nil, the behavior is equivalent to the Ignore policy.
                      type: string
                    topologyKey:
                      description: |-
                        TopologyKey is the key of node labels. Nodes that have a label with this key
                        and identical values are considered to be in the same topology.
                        We consider each <key, value> as a "bucket", and try to put balanced number
                        of pods into each bucket.
                        We define a domain as a particular instance of a topology.
                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                        nodeAffinityPolicy and nodeTaintsPolicy.
                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                        It's a required field.
                      type: string
                    whenUnsatisfiable:
                      description: |-
                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                        the spread constraint.
                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                          but giving higher precedence to topologies that would help reduce the
                          skew.
                        A constraint is considered "Unsatisfiable" for an incoming pod
                        if and only if every possible node assignment for that pod would violate
                        "MaxSkew" on some topology.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 3/1/1:
                        | zone1 | zone2 | zone3 |
                        | P P P |   P   |   P   |
                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                        won't make it *more* imbalanced.
                        It's a required field.
                      type: string
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                type: array
              version:
                description: Version specifies the version of Qdrant to deploy
                type: string
            required:
            - id
            - size
            - version
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: QdrantClusterStatus defines the observed state of QdrantCluster
            properties:
              ScaleDownNodeIndex:
                description: |-
                  The node index used in a scale down (see ScaleDownAllowed)
                  If this field is not set the last index in AvailableNodeIndexes will be used.
                type: integer
              availableNodeIndexes:
                description: |-
                  AvailableNodeIndexes specifies the indexes of the individual nodes in the cluster
                  The number of indexes should be equal with the AvailableNodes field.
                items:
                  type: integer
                type: array
              availableNodes:
                description: AvailableNodes specifies the number of available nodes
                  in the cluster
                type: integer
              bootstrapNode:
                description: |-
                  BootstrapNode specifies the node in the cluster which will be used for bootstrapping a new node.
                  Should be a value from AvailableNodeIndexes.
                  As default the value from AvailableNodeIndexes[0] will be used.
                type: integer
              clusterManagerResponse:
                properties:
                  executed_actions:
                    items:
                      description: |-
                        RawMessage is a raw encoded JSON value.
                        It implements [Marshaler] and [Unmarshaler] and can
                        be used to delay JSON decoding or precompute a JSON encoding.
                      format: byte
                      type: string
                    type: array
                  required_actions:
                    items:
                      description: |-
                        RawMessage is a raw encoded JSON value.
                        It implements [Marshaler] and [Unmarshaler] and can
                        be used to delay JSON decoding or precompute a JSON encoding.
                      format: byte
                      type: string
                    type: array
                  suggested_actions:
                    description: SuggestedActions Those Actions are NOT scheduled
                      to be executed, just suggested
                    items:
                      description: |-
                        RawMessage is a raw encoded JSON value.
                        It implements [Marshaler] and [Unmarshaler] and can
                        be used to delay JSON decoding or precompute a JSON encoding.
                      format: byte
                      type: string
                    type: array
                required:
                - executed_actions
                - required_actions
                - suggested_actions
                type: object
              conditions:
                description: Conditions specifies the conditions of different checks
                  on the cluster
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deleteInProgressNodeIndexes:
                description: |-
                  DeleteInProgessNodeIndexes specifies the indexes of the nodes in the cluster which are in progress of deleting and required to be deleted.
                  The indexes in this field are part of the AvailableNodeIndexes as well and cannot be re-used anymore before they are fully dropped.
                  Meaning that if the cluster-manager has (async) started the process of deleting nodes, due to a scale-down, there is no way to revert this operaton.
                  If the cluster want to scale-up concurrently (aka the delete is in progress), new nodes are required to accomplish.
                items:
                  type: integer
                type: array
              nextClusterManagerInvocation:
                description: The next time to invoke the cluster-manager in UTC
                format: date-time
                type: string
              nodes:
                additionalProperties:
                  properties:
                    containerStatuses:
                      items:
                        description: ContainerStatus contains details for the current
                          status of this container.
                        properties:
                          allocatedResources:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              AllocatedResources represents the compute resources allocated for this container by the
                              node. Kubelet sets this value to Container.Resources.Requests upon successful pod admission
                              and after successfully admitting desired pod resize.
                            type: object
                          allocatedResourcesStatus:
                            description: |-
                              AllocatedResourcesStatus represents the status of various resources
                              allocated for this Pod.
                            items:
                              description: ResourceStatus represents the status of
                                a single resource allocated to a Pod.
                              properties:
                                name:
                                  description: |-
                                    Name of the resource. Must be unique within the pod and in case of non-DRA resource, match one of the resources from the pod spec.
                                    For DRA resources, the value must be "claim:<claim_name>/<request>".
                                    When this status is reported about a container, the "claim_name" and "request" must match one of the claims of this container.
                                  type: string
                                resources:
                                  description: |-
                                    List of unique resources health. Each element in the list contains an unique resource ID and its health.
                                    At a minimum, for the lifetime of a Pod, resource ID must uniquely identify the resource allocated to the Pod on the Node.
                                    If other Pod on the same Node reports the status with the same resource ID, it must be the same resource they share.
                                    See ResourceID type definition for a specific format it has in various use cases.
                                  items:
                                    description: |-
                                      ResourceHealth represents the health of a resource. It has the latest device health information.
                                      This is a part of KEP https://kep.k8s.io/4680.
                                    properties:
                                      health:
                                        description: |-
                                          Health of the resource.
                                          can be one of:
                                           - Healthy: operates as normal
                                           - Unhealthy: reported unhealthy. We consider this a temporary health issue
                                                        since we do not have a mechanism today to distinguish
                                                        temporary and permanent issues.
                                           - Unknown: The status cannot be determined.
                                                      For example, Device Plugin got unregistered and hasn't been re-registered since.

                                          In future we may want to introduce the PermanentlyUnhealthy Status.
                                        type: string
                                      resourceID:
                                        description: ResourceID is the unique identifier
                                          of the resource. See the ResourceID type
                                          for more information.
                                        type: string
                                    required:
                                    - resourceID
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - resourceID
                                  x-kubernetes-list-type: map
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          containerID:
                            description: |-
                              ContainerID is the ID of the container in the format '<type>://<container_id>'.
                              Where type is a container runtime identifier, returned from Version call of CRI API
                              (for example "containerd").
                            type: string
                          image:
                            description: |-
                              Image is the name of container image that the container is running.
                              The container image may not match the image used in the PodSpec,
                              as it may have been resolved by the runtime.
                              More info: https://kubernetes.io/docs/concepts/containers/images.
                            type: string
                          imageID:
                            description: |-
                              ImageID is the image ID of the container's image. The image ID may not
                              match the image ID of the image used in the PodSpec, as it may have been
                              resolved by the runtime.
                            type: string
                          lastState:
                            description: |-
                              LastTerminationState holds the last termination state of the container to
                              help debug container crashes and restarts. This field is not
                              populated if the container is still running and RestartCount is 0.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                          name:
                            description: |-
                              Name is a DNS_LABEL representing the unique name of the container.
                              Each container in a pod must have a unique name across all container types.
                              Cannot be updated.
                            type: string
                          ready:
                            description: |-
                              Ready specifies whether the container is currently passing its readiness check.
                              The value will change as readiness probes keep executing. If no readiness
                              probes are specified, this field defaults to true once the container is
                              fully started (see Started field).

                              The value is typically used to determine whether a container is ready to
                              accept traffic.
                            type: boolean
                          resources:
                            description: |-
                              Resources represents the compute resource requests and limits that have been successfully
                              enacted on the running container after it has been started or has been successfully resized.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          restartCount:
                            description: |-
                              RestartCount holds the number of times the container has been restarted.
                              Kubelet makes an effort to always increment the value, but there
                              are cases when the state may be lost due to node restarts and then the value
                              may be reset to 0. The value is never negative.
                            format: int32
                            type: integer
                          started:
                            description: |-
                              Started indicates whether the container has finished its postStart lifecycle hook
                              and passed its startup probe.
                              Initialized as false, becomes true after startupProbe is considered
                              successful. Resets to false when the container is restarted, or if kubelet
                              loses state temporarily. In both cases, startup probes will run again.
                              Is always true when no startupProbe is defined and container is running and
                              has passed the postStart lifecycle hook. The null value must be treated the
                              same as false.
                            type: boolean
                          state:
                            description: State holds details about the container's
                              current condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                          stopSignal:
                            description: StopSignal reports the effective stop signal
                              for this container
                            type: string
                          user:
                            description: User represents user identity information
                              initially attached to the first process of the container
                            properties:
                              linux:
                                description: |-
                                  Linux holds user identity information initially attached to the first process of the containers in Linux.
                                  Note that the actual running identity can be changed if the process has enough privilege to do so.
                                properties:
                                  gid:
                                    description: GID is the primary gid initially
                                      attached to the first process in the container
                                    format: int64
                                    type: integer
                                  supplementalGroups:
                                    description: SupplementalGroups are the supplemental
                                      groups initially attached to the first process
                                      in the container
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  uid:
                                    description: UID is the primary uid initially
                                      attached to the first process in the container
                                    format: int64
                                    type: integer
                                required:
                                - gid
                                - uid
                                type: object
                            type: object
                          volumeMounts:
                            description: Status of volume mounts.
                            items:
                              description: VolumeMountStatus shows status of volume
                                mounts.
                              properties:
                                mountPath:
                                  description: MountPath corresponds to the original
                                    VolumeMount.
                                  type: string
                                name:
                                  description: Name corresponds to the name of the
                                    original VolumeMount.
                                  type: string
                                readOnly:
                                  description: ReadOnly corresponds to the original
                                    VolumeMount.
                                  type: boolean
                                recursiveReadOnly:
                                  description: |-
                                    RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts).
                                    An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled,
                                    depending on the mount result.
                                  type: string
                              required:
                              - mountPath
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - mountPath
                            x-kubernetes-list-type: map
                        required:
                        - image
                        - imageID
                        - name
                        - ready
                        - restartCount
                        type: object
                      type: array
                    databasePVCStatus:
                      properties:
                        conditions:
                          items:
                            description: PersistentVolumeClaimCondition contains details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: lastProbeTime is the time we probed the
                                  condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: lastTransitionTime is the time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: message is the human-readable message
                                  indicating details about last transition.
                                type: string
                              reason:
                                description: |-
                                  reason is a unique, this should be a short, machine understandable string that gives the reason
                                  for condition's last transition. If it reports "Resizing" that means the underlying
                                  persistent volume is being resized.
                                type: string
                              status:
                                description: |-
                                  Status is the status of the condition.
                                  Can be True, False, Unknown.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                type: string
                              type:
                                description: |-
                                  Type is the type of the condition.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        events:
                          items:
                            properties:
                              count:
                                format: int32
                                type: integer
                              firstTimestamp:
                                format: date-time
                                type: string
                              lastTimestamp:
                                format: date-time
                                type: string
                              message:
                                type: string
                              reason:
                                type: string
                            type: object
                          type: array
                        phase:
                          type: string
                        storageClassName:
                          type: string
                      type: object
                    events:
                      items:
                        properties:
                          count:
                            format: int32
                            type: integer
                          firstTimestamp:
                            format: date-time
                            type: string
                          lastTimestamp:
                            format: date-time
                            type: string
                          message:
                            type: string
                          reason:
                            type: string
                        type: object
                      type: array
                    name:
                      description: Name specifies the name of the node
                      type: string
                    podConditions:
                      items:
                        description: PodCondition contains details for the current
                          condition of this pod.
                        properties:
                          lastProbeTime:
                            description: Last time we probed the condition.
                            format: date-time
                            type: string
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another.
                            format: date-time
                            type: string
                          message:
                            description: Human-readable message indicating details
                              about last transition.
                            type: string
                          observedGeneration:
                            description: |-
                              If set, this represents the .metadata.generation that the pod condition was set based upon.
                              This is an alpha field. Enable PodObservedGenerationTracking to be able to use this field.
                            format: int64
                            type: integer
                          reason:
                            description: Unique, one-word, CamelCase reason for the
                              condition's last transition.
                            type: string
                          status:
                            description: |-
                              Status is the status of the condition.
                              Can be True, False, Unknown.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
                            type: string
                          type:
                            description: |-
                              Type is the type of the condition.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    podMessage:
                      type: string
                    podPhase:
                      description: PodPhase is a label for the condition of a pod
                        at the current time.
                      type: string
                    podReason:
                      type: string
                    snapshotsPVCStatus:
                      properties:
                        conditions:
                          items:
                            description: PersistentVolumeClaimCondition contains details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: lastProbeTime is the time we probed the
                                  condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: lastTransitionTime is the time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: message is the human-readable message
                                  indicating details about last transition.
                                type: string
                              reason:
                                description: |-
                                  reason is a unique, this should be a short, machine understandable string that gives the reason
                                  for condition's last transition. If it reports "Resizing" that means the underlying
                                  persistent volume is being resized.
                                type: string
                              status:
                                description: |-
                                  Status is the status of the condition.
                                  Can be True, False, Unknown.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                type: string
                              type:
                                description: |-
                                  Type is the type of the condition.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        events:
                          items:
                            properties:
                              count:
                                format: int32
                                type: integer
                              firstTimestamp:
                                format: date-time
                                type: string
                              lastTimestamp:
                                format: date-time
                                type: string
                              message:
                                type: string
                              reason:
                                type: string
                            type: object
                          type: array
                        phase:
                          type: string
                        storageClassName:
                          type: string
                      type: object
                    started_at:
                      description: StartedAt specifies the time when the node started
                        (in RFC3339 format)
                      type: string
                    state:
                      additionalProperties:
                        type: string
                      description: States specifies the condition states of the node
                      type: object
                    version:
                      description: Version specifies the version of Qdrant running
                        on the node
                      type: string
                  type: object
                description: Nodes specifies the status of the nodes in the cluster
                type: object
              phase:
                description: Phase specifies the phase of the cluster
                type: string
              reason:
                description: Reason specifies the reason for the phase of the cluster
                type: string
              scaleDownAllowed:
                description: |-
                  If set the operator will scale down 1 peer and reset the bool.
                  If you want to remove more then 1 peer, you need to repeat setting this bool
                type: boolean
              version:
                description: |-
                  The version (to be) used in the cluster.
                  This version can differ from the spec, because version updates need to be done in order (see `update-path` annotation)
                type: string
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources: {}
{{ end }}
